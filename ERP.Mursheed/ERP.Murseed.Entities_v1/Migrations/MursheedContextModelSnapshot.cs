// <auto-generated />
using System;
using ERP.Mursheed.ORM;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ERP.Mursheed.ORM.Migrations
{
    [DbContext(typeof(MursheedContext))]
    partial class MursheedContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ERP.Mursheed.Entities.Shared.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("ERP.Mursheed.Entities.Shared.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("PersonId");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("ERP.Mursheed.Entities.Shared.ApplicationUserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("ERP.Mursheed.Entities.Shared.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brand");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Volkswagen"
                        });
                });

            modelBuilder.Entity("ERP.Mursheed.Entities.Shared.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ModelId");

                    b.ToTable("Car");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ModelId = 1
                        },
                        new
                        {
                            Id = 2,
                            ModelId = 2
                        });
                });

            modelBuilder.Entity("ERP.Mursheed.Entities.Shared.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "Baki"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            Name = "Sumqayit"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 1,
                            Name = "Gence"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 1,
                            Name = "Quba"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 1,
                            Name = "Qusar"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 1,
                            Name = "Seki"
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 1,
                            Name = "Xacmaz"
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 1,
                            Name = "Mingecevir"
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 1,
                            Name = "Lenkeran"
                        });
                });

            modelBuilder.Entity("ERP.Mursheed.Entities.Shared.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ISO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISO3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NiceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phonecode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Azerbaijan"
                        });
                });

            modelBuilder.Entity("ERP.Mursheed.Entities.Shared.DateFromTo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DateFromTo");
                });

            modelBuilder.Entity("ERP.Mursheed.Entities.Shared.Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Model");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            Name = "Touareg"
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 1,
                            Name = "Passat"
                        });
                });

            modelBuilder.Entity("ERP.Mursheed.Entities.Shared.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("DateOfBirth")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Person");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Email = "samir@code.edu.az",
                            FatherName = "Karimov",
                            Firstname = "Samir",
                            Lastname = "Karimov"
                        });
                });

            modelBuilder.Entity("ERP.Mursheed.Entities.Shared.Ride", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TouristId")
                        .HasColumnType("int");

                    b.Property<int>("TransporterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TouristId");

                    b.HasIndex("TransporterId");

                    b.ToTable("Ride");
                });

            modelBuilder.Entity("ERP.Mursheed.Entities.Shared.RideToRoute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DateFromToId")
                        .HasColumnType("int");

                    b.Property<int>("RideId")
                        .HasColumnType("int");

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DateFromToId");

                    b.HasIndex("RideId");

                    b.HasIndex("RouteId");

                    b.ToTable("RideToRoute");
                });

            modelBuilder.Entity("ERP.Mursheed.Entities.Shared.Route", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FromCityId")
                        .HasColumnType("int");

                    b.Property<string>("Info")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("ToCityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FromCityId");

                    b.HasIndex("ToCityId");

                    b.ToTable("Route");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FromCityId = 1,
                            Info = "Baki-Sumqayit d1",
                            Price = 50f,
                            ToCityId = 2
                        },
                        new
                        {
                            Id = 2,
                            FromCityId = 1,
                            Info = "Baki-Gence d1",
                            Price = 55f,
                            ToCityId = 3
                        },
                        new
                        {
                            Id = 3,
                            FromCityId = 1,
                            Info = "Baki-Quba d1",
                            Price = 65f,
                            ToCityId = 4
                        },
                        new
                        {
                            Id = 4,
                            FromCityId = 1,
                            Info = "Baki-Qusar d1",
                            Price = 45f,
                            ToCityId = 5
                        },
                        new
                        {
                            Id = 5,
                            FromCityId = 1,
                            Info = "Baki-Seki d1",
                            Price = 35f,
                            ToCityId = 6
                        },
                        new
                        {
                            Id = 6,
                            FromCityId = 2,
                            Info = "Sumqayit-Xacmaz d1",
                            Price = 25f,
                            ToCityId = 7
                        },
                        new
                        {
                            Id = 7,
                            FromCityId = 2,
                            Info = "Sumqayit-Mingecevir d1",
                            Price = 65f,
                            ToCityId = 8
                        },
                        new
                        {
                            Id = 8,
                            FromCityId = 2,
                            Info = "Sumqayit-Lenkeran d1",
                            Price = 50f,
                            ToCityId = 9
                        },
                        new
                        {
                            Id = 9,
                            FromCityId = 1,
                            Info = "Baki-Sumqayit d2",
                            Price = 55f,
                            ToCityId = 2
                        },
                        new
                        {
                            Id = 10,
                            FromCityId = 1,
                            Info = "Baki-Gence d2",
                            Price = 45f,
                            ToCityId = 3
                        },
                        new
                        {
                            Id = 11,
                            FromCityId = 1,
                            Info = "Baki-Quba d2",
                            Price = 50f,
                            ToCityId = 4
                        },
                        new
                        {
                            Id = 12,
                            FromCityId = 1,
                            Info = "Baki-Qusar d2",
                            Price = 55f,
                            ToCityId = 5
                        });
                });

            modelBuilder.Entity("ERP.Mursheed.Entities.Shared.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RideToRouteId")
                        .HasColumnType("int");

                    b.Property<float>("TotalPrice")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("RideToRouteId");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("ERP.Mursheed.Entities.Shared.Tourist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Tourist");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FatherName = "Heci Oglu",
                            Firstname = "Heci",
                            Lastname = "Hecili",
                            Status = false
                        });
                });

            modelBuilder.Entity("ERP.Mursheed.Entities.Shared.Transporter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("CustomId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DriverLicense")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("GovernmentalId")
                        .HasColumnType("int");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("CountryId");

                    b.ToTable("Transporter");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarId = 1,
                            CountryId = 1,
                            FatherName = "Rovshan",
                            Firstname = "Parviz",
                            GovernmentalId = 123456789,
                            Lastname = "Ali",
                            Status = false
                        },
                        new
                        {
                            Id = 2,
                            CarId = 2,
                            CountryId = 1,
                            FatherName = "Agalar",
                            Firstname = "Aga",
                            GovernmentalId = 678912345,
                            Lastname = "Dayi",
                            Status = false
                        });
                });

            modelBuilder.Entity("ERP.Mursheed.Entities.Shared.TransporterRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TouristId")
                        .HasColumnType("int");

                    b.Property<int>("TransporterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TouristId");

                    b.HasIndex("TransporterId");

                    b.ToTable("TransporterRating");
                });

            modelBuilder.Entity("ERP.Mursheed.Entities.Shared.TransporterRoute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.Property<int>("TransporterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RouteId");

                    b.HasIndex("TransporterId");

                    b.ToTable("TransporterRoute");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RouteId = 1,
                            TransporterId = 1
                        },
                        new
                        {
                            Id = 2,
                            RouteId = 2,
                            TransporterId = 1
                        },
                        new
                        {
                            Id = 3,
                            RouteId = 3,
                            TransporterId = 1
                        },
                        new
                        {
                            Id = 4,
                            RouteId = 4,
                            TransporterId = 1
                        },
                        new
                        {
                            Id = 5,
                            RouteId = 5,
                            TransporterId = 1
                        },
                        new
                        {
                            Id = 6,
                            RouteId = 6,
                            TransporterId = 1
                        },
                        new
                        {
                            Id = 7,
                            RouteId = 7,
                            TransporterId = 1
                        },
                        new
                        {
                            Id = 8,
                            RouteId = 8,
                            TransporterId = 1
                        },
                        new
                        {
                            Id = 9,
                            RouteId = 9,
                            TransporterId = 2
                        },
                        new
                        {
                            Id = 10,
                            RouteId = 10,
                            TransporterId = 2
                        },
                        new
                        {
                            Id = 11,
                            RouteId = 11,
                            TransporterId = 2
                        },
                        new
                        {
                            Id = 12,
                            RouteId = 12,
                            TransporterId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("ERP.Mursheed.Entities.Shared.ApplicationUser", b =>
                {
                    b.HasOne("ERP.Mursheed.Entities.Shared.Person", "Person")
                        .WithMany("ApplicationUsers")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ERP.Mursheed.Entities.Shared.ApplicationUserRole", b =>
                {
                    b.HasOne("ERP.Mursheed.Entities.Shared.ApplicationRole", "ApplicationRole")
                        .WithMany("ApplicationUserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERP.Mursheed.Entities.Shared.ApplicationUser", "ApplicationUser")
                        .WithMany("ApplicationUserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ERP.Mursheed.Entities.Shared.Car", b =>
                {
                    b.HasOne("ERP.Mursheed.Entities.Shared.Model", "Model")
                        .WithMany("Cars")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ERP.Mursheed.Entities.Shared.City", b =>
                {
                    b.HasOne("ERP.Mursheed.Entities.Shared.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ERP.Mursheed.Entities.Shared.Model", b =>
                {
                    b.HasOne("ERP.Mursheed.Entities.Shared.Brand", "Brand")
                        .WithMany("Models")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ERP.Mursheed.Entities.Shared.Ride", b =>
                {
                    b.HasOne("ERP.Mursheed.Entities.Shared.Tourist", "Tourist")
                        .WithMany("Rides")
                        .HasForeignKey("TouristId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERP.Mursheed.Entities.Shared.Transporter", "Transporter")
                        .WithMany("Rides")
                        .HasForeignKey("TransporterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ERP.Mursheed.Entities.Shared.RideToRoute", b =>
                {
                    b.HasOne("ERP.Mursheed.Entities.Shared.DateFromTo", "DateFromTo")
                        .WithMany("RideToRoutes")
                        .HasForeignKey("DateFromToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERP.Mursheed.Entities.Shared.Ride", "Ride")
                        .WithMany("RideToRoutes")
                        .HasForeignKey("RideId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERP.Mursheed.Entities.Shared.Route", "Route")
                        .WithMany("RideToRoutes")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ERP.Mursheed.Entities.Shared.Route", b =>
                {
                    b.HasOne("ERP.Mursheed.Entities.Shared.City", "FromCity")
                        .WithMany("FromRoutes")
                        .HasForeignKey("FromCityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Mursheed.Entities.Shared.City", "ToCity")
                        .WithMany("ToRoutes")
                        .HasForeignKey("ToCityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ERP.Mursheed.Entities.Shared.Ticket", b =>
                {
                    b.HasOne("ERP.Mursheed.Entities.Shared.RideToRoute", "RideToRoute")
                        .WithMany("Tickets")
                        .HasForeignKey("RideToRouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ERP.Mursheed.Entities.Shared.Transporter", b =>
                {
                    b.HasOne("ERP.Mursheed.Entities.Shared.Car", "Car")
                        .WithMany("Transporters")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERP.Mursheed.Entities.Shared.Country", "Country")
                        .WithMany("Transporters")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ERP.Mursheed.Entities.Shared.TransporterRating", b =>
                {
                    b.HasOne("ERP.Mursheed.Entities.Shared.Tourist", "Tourist")
                        .WithMany("TransporterRatings")
                        .HasForeignKey("TouristId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERP.Mursheed.Entities.Shared.Transporter", "Transporter")
                        .WithMany("TransporterRatings")
                        .HasForeignKey("TransporterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ERP.Mursheed.Entities.Shared.TransporterRoute", b =>
                {
                    b.HasOne("ERP.Mursheed.Entities.Shared.Route", "Route")
                        .WithMany("TransporterRoutes")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERP.Mursheed.Entities.Shared.Transporter", "Transporter")
                        .WithMany("TransporterRoutes")
                        .HasForeignKey("TransporterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("ERP.Mursheed.Entities.Shared.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ERP.Mursheed.Entities.Shared.ApplicationUser", null)
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ERP.Mursheed.Entities.Shared.ApplicationUser", null)
                        .WithMany("Logins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ERP.Mursheed.Entities.Shared.ApplicationUser", null)
                        .WithMany("Tokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
